<?php

/**
 * @file
 * IISP profiler main module.
 */

/**
 * @defgroup action_example Example: Action
 * @ingroup examples
 * @{
 * Creating actions in Drupal 7
 *
 */


/**
 * Implements hook_menu().
 *
 * Provides a menu entry which explains what the module does.
 */
function iisp_profiler_menu() {
  
  $items['admin/iisp_profiler/skills/view'] = array(
    'title' => 'Skills',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  
  $items['admin/iisp_profiler/skills/categories'] = array(
    'title'           => 'IISP skills categories',
    'description'     => 'Provides the iisp skills categories for the iisp profiler',
    'page callback'   => 'iisp_skills_categories',
	'type' 			  => MENU_LOCAL_TASK,
    'file'            => 'admin/profiler_admin.inc', 
	'access arguments' => array('administer skill profiler settings'),
  );
 
  $items['admin/iisp_profiler/skills/categories/create'] = array(
    'title'           => 'create new iisp skills categories',
    'description'     => 'Provides the iisp skills categories for the iisp profiler',
    'page callback'   => 'iisp_skills_categories',
    'page arguments' => array('create'),
    'file'            => 'admin/profiler_admin.inc',
	'type' => MENU_CALLBACK,
    'access arguments' => array('administer skill profiler settings'),
  );
  
  $items['admin/iisp_profiler/skills/categories/%/edit'] = array(
    'title'           => 'Edit iisp skills categories',
    'description'     => 'Provides the iisp skills categories for the iisp profiler',
    'page callback'   => 'iisp_skills_categories_page_edit',
    'page arguments'  => array(4), 
    'file'            => 'admin/profiler_admin.inc', 
	'type' => MENU_CALLBACK,
    'access arguments' => array('administer skill profiler settings'),
  );

  $items['admin/iisp_profiler/skills'] = array(
    'title'           => 'IISP skills',
    'description'     => 'Provides the iisp skills for the iisp profiler',
    'page callback'   => 'iisp_skills_skills',
	'file'            => 'admin/profiler_admin_skills.inc', 
    'access arguments' => array('administer skill profiler settings'),
	'type' => MENU_LOCAL_TASK,
	'weight' => -10,
  );
  

  $items['admin/iisp_profiler/skills/create'] = array(
    'title'           => 'Create IISP skills',
    'description'     => 'Provides the iisp skills for the iisp profiler',
    'page callback'   => 'iisp_skills_skills',
	'page arguments'  => array('create'),
	'file'            => 'admin/profiler_admin_skills.inc',
	'type' => MENU_CALLBACK, 
    'access arguments' => array('administer skill profiler settings'),
  );
  
  $items['admin/iisp_profiler/skills/%/edit'] = array(
    'title'           => 'Edit IISP skills',
    'description'     => 'Provides the iisp skills for the iisp profiler',
    'file'            => 'admin/profiler_admin.inc', 
    'page callback'   => 'iisp_skills_skills_page_edit',
	'page arguments'  => array(3),
	'file'            => 'admin/profiler_admin_skills.inc', 
	'type' => MENU_CALLBACK,
    'access arguments' => array('administer skill profiler settings'),
  );
  
  $items['admin/iisp_profiler/config'] = array(
    'title'           => 'IISP admin configuraton',
    'description'     => 'Provides the iisp admin configuration for the iisp profiler',
    'page callback'   => 'drupal_get_form',
	'page arguments'  => array('iisp_admin_config_form'),
    'file'            => 'admin/iisp_config.inc', 
    'access arguments' => array('administer skill profiler settings'),
	'type' => MENU_LOCAL_TASK,
  );
  
  $items['admin/iisp_profiler/field_settings'] = array(
    'title'           => t('Field settings'),
    'description'     => t('Provides the iisp fields settings for the iisp profiler'),
    'page callback'   => 'iisp_fields_settings',
    'file'            => 'admin/field_settings.inc', 
    'access arguments' => array('administer skill profiler settings'),
	'type' => MENU_LOCAL_TASK,
  );

  $items['admin/iisp_profiler/field_settings/create'] = array(
      'title' => t('Create field settings'),
      'description' => t('Create the iisp fields settings for the iisp profiler'),
      'page callback' => 'iisp_fields_settings',
      'page arguments' => array('create'),
      'access callback' => TRUE,
      'file' => 'admin/field_settings.inc',
	  'type' => MENU_CALLBACK,
      'access arguments' => array('administer skill profiler settings'),
  );


  $items['admin/iisp_profiler/field_settings/%/edit'] = array(
      'title' => t('Edit field settings'),
      'description' => t('Edit the iisp fields settings for the iisp profiler'),
      'page callback' => 'iisp_fields_settings_page_edit',
      'page arguments' => array(3),
      'access arguments' => array('administer skill profiler settings'),
	  'type' => MENU_CALLBACK,
      'file' => 'admin/field_settings.inc',
      'weight' => 1,
  );

  $items['admin/iisp_profiler/sifa_skills_types'] = array(
    'title'           => 'SIfA skills types',
    'description'     => 'Provides the SIFA skills types',
    'page callback'   => 'sifa_skill_types',
	'file'            => 'admin/sifa_skill_types_settings.inc', 
    'access arguments' => array('administer skill profiler settings'),
	'type' => MENU_LOCAL_TASK,
  );

  $items['admin/iisp_skills/sifa_skills_levels'] = array(
    'title'           => 'SIfA skills levels',
    'description'     => 'Provides the SIFA skills levels',
    'page callback'   => 'sifa_skill_levels',
    'file'            => 'admin/sifa_skill_levels_settings.inc', 
    'access arguments' => array('administer skill profiler settings'),
	'type' => MENU_LOCAL_TASK,
  );
  
  $items['iisp_profiler/dashboard/view'] = array(
    'title' => 'Dashboard',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  
  $items['iisp_profiler/settings'] = array(
    'title'           => 'Settings',
    'description'     => 'Provides the settings for the iisp profiler',
    'page callback'   => 'iisp_profiler_settings',
	'file'            => 'profiler_settings.inc', 
    'access arguments' => array('administer skill profiler settings'),
	'type' => MENU_LOCAL_TASK,
  );
  
  $items['iisp_profiler/activities'] = array(
    'title'           => 'Activities',
    'description'     => 'Provides the activities for the iisp profiler',
    'page callback'   => 'iisp_profiler_activities',
    'file'            => 'profiler_activities.inc', 
	'type' => MENU_LOCAL_TASK,
    'access callback' => TRUE,
  );
  
  $items['iisp_profiler/goals'] = array(
    'title'           => 'Goals',
    'description'     => 'Provides the goals for the iisp profiler',
    'page callback'   => 'iisp_profiler_goals',
    'file'            => 'profiler_goals.inc', 
	'type' => MENU_LOCAL_TASK,
    'access callback' => TRUE,
  );
  
  $items['iisp_profiler/profiles'] = array(
    'title'           => 'Profiles',
    'description'     => 'Provides the profiles for the iisp profiler',
    'page callback'   => 'iisp_profiler',
	'file'            => 'profiler_goals.inc',
	'type' => MENU_LOCAL_TASK, 
    'access callback' => TRUE,
  );
  
  $items['iisp_profiler/dashboard'] = array(
    'title'           => 'Dashboard',
    'description'     => 'Provides the dashboard for the iisp profiler',
    'page callback'   => 'iisp_profiler_dashboard',
    'file'            => 'profiler_dashboard.inc', 
    'access callback' => TRUE,
	'type' => MENU_LOCAL_TASK,
  );
  
  $items['iisp_skills/ajax_settings'] = array(
    'title'           => 'Settings',
    'description'     => 'Provides the ajax callback settings for the iisp profiler',
    'page callback'   => 'ajax_settings',
    'file'            => 'profiler_settings.inc', 
	'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  
  $items['skills/receive_settings_data'] = array(
    'title'           => 'Receive settings data',
    'description'     => 'Receive settings data',
    'page callback'   => 'receive_settings_data',
    'file'            => 'profiler_settings.inc', 
	'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  
  
  return $items;
  
}


//Custom functions
function get_active_variable($act) {
   if($act == '1') {
       $active = "Yes";
   } else {
       $active = "No" ;
   }    

   return $active;
}

function get_keyvalue_array($keyvalue_unmanaged_arr){
  $options = array();
    $keyvalue_unmanaged_arr = preg_split("/\\r\\n|\\r|\\n/", $keyvalue_unmanaged_arr);
  foreach($keyvalue_unmanaged_arr as $kpr){
    $key_pair_separated = explode('|', $kpr);
    $options[$key_pair_separated[0]] = $key_pair_separated[1]; 
  }
  return $options;
}

function fetch_from_table($tablename, $alias, $compare_parameter, $parameter, $tableprimarykey)
{
    $query = db_select($tablename, $alias)
        ->fields($alias)
        ->condition($alias . '.' . $compare_parameter, $parameter);
       $result = $query->execute()
        ->fetchAll();
    if($result) return TRUE;
    else return FALSE;
}

function check_if_user_has_profile_settings($field_settings_id, $user_id)
{
    $query = db_select('iisp_field_user_data','ud')
        ->fields('ud')
        ->condition('ud.iisp_field_settings_id', $field_settings_id)
        ->condition('ud.uid', $user_id);
       $result = $query->execute()
        ->fetchObject();
    if($result) return TRUE;
    else return FALSE;
}

function get_dropdownlist($tablename, $alias, $compare_parameter, $parameter, $tableprimarykey, $parameterexpecting)
{
	
	
    $query = db_select($tablename, $alias)
        ->fields($alias)
        ->orderBy($alias . '.' . $tableprimarykey, 'DESC')
		->execute()
        ->fetchAll();
		
		
    $result = array();
    $result[''] = "- Select -";
    foreach ($query as $qry) {
        $result[$qry->$tableprimarykey] = $qry->$parameterexpecting;
    }

	
    return $result;
}

function iisp_profiler_theme() {
  return array(
    'profiler_settings_page' => array(
      'variables' => array('user_form_field_info' => NULL),      
      'template' => 'settings-page',
      'path' => drupal_get_path('module', 'iisp_profiler') .'/themes/',)
    );
 }

 function user_system_attribute_form_fields($field_settings_id){
     global $user;
     $query = db_select('iisp_field_user_data', 'ud')
            ->fields('ud')
            ->condition('ud.uid',$user->uid)
            ->condition('ud.iisp_field_settings_id',$field_settings_id);
    $result =$query->execute()
            ->fetchObject();
    return $result;
  }

 function user_goal_form_fields(){
     global $user;
     $query = db_select('iisp_goals_custom_fields', 'ud')
            ->fields('ud')
            ->condition('ud.uid',$user->uid);
    $result =$query->execute()
            ->fetchAll();
    return $result;
  }

function user_activity_form_fields(){
     global $user;
     $query = db_select('iisp_activities_custom_fields', 'ud')
            ->fields('ud')
            ->condition('ud.uid',$user->uid);
    $result =$query->execute()
            ->fetchAll();
    return $result;
  }



/**
* Implements hook_permission
*/
function iisp_profiler_permission() {
  $permissions = array(
    'administer skill profiler settings' => array(
      'title' => t('Administer skill profiler module settings'),
      'description' => t('Administer skiller profiler settings mainly for administration'),
    ),
	
	'skill profiler works' => array(
      'title' => t('Skill profiler works'),
      'description' => t('Skill profiler works and permission settings'),
    ),
	
	'skiller manager works' => array(
      'title' => t('Skill manager works'),
      'description' => t('Skill manager works and permissions settings'),
    ),
  );

  return $permissions;
}

function iisp_profiler_menu_alter(&$items) {
 /* unset($items['admin/index']);
  unset($items['admin']);*/
 }







